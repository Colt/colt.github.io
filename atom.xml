<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Colt/Code]]></title>
  <link href="http://Colt.github.io/atom.xml" rel="self"/>
  <link href="http://Colt.github.io/"/>
  <updated>2014-07-28T22:13:18-07:00</updated>
  <id>http://Colt.github.io/</id>
  <author>
    <name><![CDATA[Colt Steele]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pixel Sorting Experiments Part 1]]></title>
    <link href="http://Colt.github.io/blog/2014/07/28/pixel-sorting-experiments-part-1/"/>
    <updated>2014-07-28T21:06:25-07:00</updated>
    <id>http://Colt.github.io/blog/2014/07/28/pixel-sorting-experiments-part-1</id>
    <content type="html"><![CDATA[<p>A few weeks ago I was walking home and saw a bunch of American Flags blah blah:</p>

<p><img src="http://Colt.github.io/images/cool.png" ></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'> <span class="kn">import</span> <span class="nn">processing.serial.*</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'> <span class="n">Serial</span> <span class="n">myPort</span><span class="o">;</span>        <span class="c1">// The serial port</span>
</span><span class='line'> <span class="kt">int</span> <span class="n">xPos</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>         <span class="c1">// horizontal position of the graph</span>
</span><span class='line'>
</span><span class='line'> <span class="n">PImage</span> <span class="n">logo</span><span class="o">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">bgcolor</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'> <span class="kt">void</span> <span class="nf">setup</span> <span class="o">()</span> <span class="o">{</span>
</span><span class='line'> <span class="c1">// set the window size:</span>
</span><span class='line'><span class="n">logo</span> <span class="o">=</span> <span class="n">loadImage</span><span class="o">(</span><span class="s">&quot;http://arduino.cc/logo.png&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">size</span><span class="o">(</span><span class="n">logo</span><span class="o">.</span><span class="na">width</span><span class="o">,</span> <span class="n">logo</span><span class="o">.</span><span class="na">height</span><span class="o">);</span>
</span><span class='line'>  <span class="n">colorMode</span><span class="o">(</span><span class="n">HSB</span><span class="o">,</span> <span class="mi">255</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'> <span class="c1">// List all the available serial ports</span>
</span><span class='line'> <span class="n">println</span><span class="o">(</span><span class="n">Serial</span><span class="o">.</span><span class="na">list</span><span class="o">());</span>
</span><span class='line'> <span class="c1">// I know that the first port in the serial list on my mac</span>
</span><span class='line'> <span class="c1">// is always my  Arduino, so I open Serial.list()[0].</span>
</span><span class='line'> <span class="c1">// Open whatever port is the one you&#39;re using.</span>
</span><span class='line'> <span class="n">myPort</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Serial</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="n">Serial</span><span class="o">.</span><span class="na">list</span><span class="o">()[</span><span class="mi">2</span><span class="o">],</span> <span class="mi">9600</span><span class="o">);</span>
</span><span class='line'> <span class="c1">// don&#39;t generate a serialEvent() unless you get a newline character:</span>
</span><span class='line'> <span class="n">myPort</span><span class="o">.</span><span class="na">bufferUntil</span><span class="o">(</span><span class="sc">&#39;\n&#39;</span><span class="o">);</span>
</span><span class='line'> <span class="c1">// set inital background:</span>
</span><span class='line'> <span class="o">}</span>
</span><span class='line'> <span class="kt">void</span> <span class="nf">draw</span> <span class="o">()</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// everything happens in the serialEvent()</span>
</span><span class='line'> <span class="o">}</span>
</span><span class='line'>
</span><span class='line'> <span class="kt">void</span> <span class="nf">serialEvent</span> <span class="o">(</span><span class="n">Serial</span> <span class="n">myPort</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'> <span class="c1">// get the ASCII string:</span>
</span><span class='line'> <span class="n">String</span> <span class="n">inString</span> <span class="o">=</span> <span class="n">myPort</span><span class="o">.</span><span class="na">readStringUntil</span><span class="o">(</span><span class="sc">&#39;\n&#39;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'> <span class="k">if</span> <span class="o">(</span><span class="n">inString</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'> <span class="c1">// trim off any whitespace:</span>
</span><span class='line'> <span class="n">inString</span> <span class="o">=</span> <span class="n">trim</span><span class="o">(</span><span class="n">inString</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">// convert to an int and map to the screen height:</span>
</span><span class='line'> <span class="kt">float</span> <span class="n">inByte</span> <span class="o">=</span> <span class="kt">float</span><span class="o">(</span><span class="n">inString</span><span class="o">);</span>
</span><span class='line'> <span class="n">println</span><span class="o">(</span><span class="n">inByte</span><span class="o">);</span>
</span><span class='line'> <span class="n">inByte</span> <span class="o">=</span> <span class="n">map</span><span class="o">(</span><span class="n">inByte</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1023</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">255</span><span class="o">);</span>
</span><span class='line'>   <span class="n">background</span><span class="o">(</span><span class="n">inByte</span><span class="o">,</span><span class="mi">255</span><span class="o">,</span><span class="mi">255</span><span class="o">);</span>
</span><span class='line'> <span class="o">}</span>
</span><span class='line'> <span class="o">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
